!function (o) { "use strict"; function e() { o(window).on("load", function () { o("#status").fadeOut(), o("#preloader").delay(350).fadeOut("slow") });[...document.querySelectorAll('[data-bs-toggle="popover"]')].map(e => new bootstrap.Popover(e)), [...document.querySelectorAll('[data-bs-toggle="tooltip"]')].map(e => new bootstrap.Tooltip(e)), [...document.querySelectorAll(".offcanvas")].map(e => new bootstrap.Offcanvas(e)); var e = document.getElementById("toastPlacement"); e && document.getElementById("selectToastPlacement").addEventListener("change", function () { e.dataset.originalClass || (e.dataset.originalClass = e.className), e.className = e.dataset.originalClass + " " + this.value });[].slice.call(document.querySelectorAll(".toast")).map(function (e) { return new bootstrap.Toast(e) }); const n = document.getElementById("liveAlertPlaceholder"), t = document.getElementById("liveAlertBtn"); t && t.addEventListener("click", () => { { var e = "Nice, you triggered this alert message!", t = "success"; const a = document.createElement("div"); a.innerHTML = [`<div class="alert alert-${t} alert-dismissible" role="alert">`, `   <div>${e}</div>`, '   <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>', "</div>"].join(""), n.append(a) } }), Waves.init(), feather.replace() } var a, t, n, s, r; e(), a = ".card", o(document).on("click", '.card a[data-bs-toggle="remove"]', function (e) { e.preventDefault(); var e = o(this).closest(a), t = e.parent(); e.remove(), 0 == t.children().length && t.remove() }), o(document).on("click", '.card a[data-bs-toggle="reload"]', function (e) { e.preventDefault(); var e = o(this).closest(a), t = (e.append('<div class="card-disabled"><div class="card-portlets-loader"></div></div>'), e.find(".card-disabled")); setTimeout(function () { t.fadeOut("fast", function () { t.remove() }) }, 500 + 5 * Math.random() * 300) }), o(".dropdown-menu a.dropdown-toggle").on("click", function () { var e = o(this).next(".dropdown-menu"), e = o(this).parent().parent().find(".dropdown-menu").not(e); return e.removeClass("show"), e.parent().find(".dropdown-toggle").removeClass("show"), !1 }), t = o(".navbar-custom .dropdown:not(.app-search)"), o(document).on("click", function (e) { return "top-search" == e.target.id || e.target.closest("#search-dropdown") ? o("#search-dropdown").addClass("d-block") : o("#search-dropdown").removeClass("d-block"), !0 }), o("#top-search").on("focus", function (e) { return e.preventDefault(), t.children(".dropdown-menu.show").removeClass("show"), o("#search-dropdown").addClass("d-block"), !1 }), t.on("show.bs.dropdown", function () { o("#search-dropdown").removeClass("d-block") }), (n = document.querySelector('[data-toggle="fullscreen"]')) && n.addEventListener("click", function (e) { e.preventDefault(), document.body.classList.toggle("fullscreen-enable"), document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement ? document.cancelFullScreen ? document.cancelFullScreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitCancelFullScreen && document.webkitCancelFullScreen() : document.documentElement.requestFullscreen ? document.documentElement.requestFullscreen() : document.documentElement.mozRequestFullScreen ? document.documentElement.mozRequestFullScreen() : document.documentElement.webkitRequestFullscreen && document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT) }), o("[data-password]").on("click", function () { "false" == o(this).attr("data-password") ? (o(this).siblings("input").attr("type", "text"), o(this).attr("data-password", "true"), o(this).addClass("show-password")) : (o(this).siblings("input").attr("type", "password"), o(this).attr("data-password", "false"), o(this).removeClass("show-password")) }), document.querySelectorAll(".needs-validation").forEach(t => { t.addEventListener("submit", e => { t.checkValidity() || (e.preventDefault(), e.stopPropagation()), t.classList.add("was-validated") }, !1) }), jQuery().select2 && o('[data-toggle="select2"]').select2(), jQuery().mask && o('[data-toggle="input-mask"]').each(function (e, t) { var a = o(t).data("maskFormat"), n = o(t).data("reverse"); null != n ? o(t).mask(a, { reverse: n }) : o(t).mask(a) }), jQuery().daterangepicker && (s = { startDate: moment().subtract(29, "days"), endDate: moment(), ranges: { Today: [moment(), moment()], Yesterday: [moment().subtract(1, "days"), moment().subtract(1, "days")], "Last 7 Days": [moment().subtract(6, "days"), moment()], "Last 30 Days": [moment().subtract(29, "days"), moment()], "This Month": [moment().startOf("month"), moment().endOf("month")], "Last Month": [moment().subtract(1, "month").startOf("month"), moment().subtract(1, "month").endOf("month")] } }, o('[data-toggle="date-picker-range"]').each(function (e, t) { var a = o.extend({}, s, o(t).data()), n = a.targetDisplay; o(t).daterangepicker(a, function (e, t) { n && o(n).html(e.format("MMMM D, YYYY") + " - " + t.format("MMMM D, YYYY")) }) }), r = { cancelClass: "btn-light", applyButtonClasses: "btn-success" }, o('[data-toggle="date-picker"]').each(function (e, t) { var a = o.extend({}, r, o(t).data()); o(t).daterangepicker(a) })), jQuery().timepicker && (r = { showSeconds: !0, icons: { up: "mdi mdi-chevron-up", down: "mdi mdi-chevron-down" } }, o('[data-toggle="timepicker"]').each(function (e, t) { var a = o.extend({}, r, o(t).data()); o(t).timepicker(a) })), jQuery().TouchSpin && (r = {}, o('[data-toggle="touchspin"]').each(function (e, t) { var a = o.extend({}, r, o(t).data()); o(t).TouchSpin(a) })), jQuery().maxlength && (r = { warningClass: "badge bg-success", limitReachedClass: "badge bg-danger", separator: " out of ", preText: "You typed ", postText: " chars available.", placement: "bottom" }, o('[data-toggle="maxlength"]').each(function (e, t) { var a = o.extend({}, r, o(t).data()); o(t).maxlength(a) })) }(jQuery);